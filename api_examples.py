"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API –±–æ—Ç–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
"""

import requests
import json
from typing import Dict, List

class TelegramBotAPI:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API"""
    
    def __init__(self, token: str):
        self.token = token
        self.base_url = f"https://api.telegram.org/bot{token}"
    
    def send_message(self, chat_id: int, text: str, parse_mode: str = "Markdown") -> Dict:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"{self.base_url}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": parse_mode
        }
        response = requests.post(url, json=data)
        return response.json()
    
    def send_photo(self, chat_id: int, photo: str, caption: str = "") -> Dict:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
        url = f"{self.base_url}/sendPhoto"
        data = {
            "chat_id": chat_id,
            "photo": photo,
            "caption": caption
        }
        response = requests.post(url, json=data)
        return response.json()
    
    def send_inline_keyboard(self, chat_id: int, text: str, keyboard: List[List[Dict]]) -> Dict:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
        url = f"{self.base_url}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "reply_markup": {
                "inline_keyboard": keyboard
            }
        }
        response = requests.post(url, json=data)
        return response.json()
    
    def edit_message_text(self, chat_id: int, message_id: int, text: str, keyboard: List[List[Dict]] = None) -> Dict:
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"{self.base_url}/editMessageText"
        data = {
            "chat_id": chat_id,
            "message_id": message_id,
            "text": text
        }
        if keyboard:
            data["reply_markup"] = {"inline_keyboard": keyboard}
        
        response = requests.post(url, json=data)
        return response.json()
    
    def answer_callback_query(self, callback_query_id: str, text: str = "") -> Dict:
        """–û—Ç–≤–µ—Ç –Ω–∞ callback query"""
        url = f"{self.base_url}/answerCallbackQuery"
        data = {
            "callback_query_id": callback_query_id,
            "text": text
        }
        response = requests.post(url, json=data)
        return response.json()

def example_usage():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API"""
    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    token = "7826759414:AAGaLHFPhbdoXYABMdx9E9EIERLWoU_uWwg"
    bot = TelegramBotAPI(token)
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    chat_id = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id
    message = "üöó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω!"
    result = bot.send_message(chat_id, message)
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", result)
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [{"text": "üöó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏", "callback_data": "view_cars"}],
        [{"text": "üîç –ü–æ–∏—Å–∫ –ø–æ –±—Ä–µ–Ω–¥—É", "callback_data": "search_brand"}]
    ]
    
    result = bot.send_inline_keyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", keyboard)
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:", result)

def webhook_example():
    """–ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook"""
    import flask
    from flask import request, jsonify
    
    app = flask.Flask(__name__)
    
    @app.route('/webhook', methods=['POST'])
    def webhook():
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Telegram"""
        update = request.get_json()
        
        if 'message' in update:
            message = update['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
            if text == '/start':
                bot = TelegramBotAPI("7826759414:AAGaLHFPhbdoXYABMdx9E9EIERLWoU_uWwg")
                keyboard = [
                    [{"text": "üöó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏", "callback_data": "view_cars"}],
                    [{"text": "üîç –ü–æ–∏—Å–∫ –ø–æ –±—Ä–µ–Ω–¥—É", "callback_data": "search_brand"}]
                ]
                bot.send_inline_keyboard(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω!", keyboard)
        
        return jsonify({'status': 'ok'})
    
    # –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞
    app.run(host='0.0.0.0', port=5000)

if __name__ == "__main__":
    print("–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Telegram Bot API")
    print("=" * 50)
    
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä
    # example_usage()
    # webhook_example()
    
    print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é")

