#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import json

def check_photos_in_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect("cars.db")
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    cursor.execute('SELECT car_id, brand, model, photos FROM cars WHERE photos IS NOT NULL AND photos != "[]"')
    cars_with_photos = cursor.fetchall()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(cars_with_photos)} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏:")
    print("=" * 70)
    
    for car_id, brand, model, photos_json in cars_with_photos:
        try:
            photos = json.loads(photos_json) if isinstance(photos_json, str) else photos_json
            print(f"üöó {brand} {model} (ID: {car_id})")
            print(f"   üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(photos)}")
            for i, photo in enumerate(photos):
                print(f"   {i+1}. {photo}")
            print()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {car_id}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    cursor.execute('SELECT COUNT(*) FROM cars')
    total_cars = cursor.fetchone()[0]
    
    cursor.execute('SELECT COUNT(*) FROM cars WHERE photos IS NOT NULL AND photos != "[]"')
    cars_with_photos_count = cursor.fetchone()[0]
    
    print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {total_cars}")
    print(f"   –° —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏: {cars_with_photos_count}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —Å —Ñ–æ—Ç–æ: {(cars_with_photos_count/total_cars*100):.1f}%")
    
    conn.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    try:
        check_photos_in_database()
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()



